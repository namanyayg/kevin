(function(){"use strict";var e={440:function(e,t,n){var a=n(5130),o=n(6768);const i=(0,o.Lk)("header",null,[(0,o.Lk)("h1",null,"Kevin"),(0,o.Lk)("h2",{class:"subtitle"},"Your Open Source AI Software Engineer")],-1);function s(e,t,n,a,s,r){const l=(0,o.g2)("Terminal"),c=(0,o.g2)("Chat"),d=(0,o.g2)("About"),u=(0,o.g2)("Colophon");return(0,o.uX)(),(0,o.CE)("main",null,[i,(0,o.bF)(l),(0,o.bF)(c),(0,o.bF)(d),(0,o.bF)(u)])}var r=n(4232);const l=e=>((0,o.Qi)("data-v-50d5b0b9"),e=e(),(0,o.jt)(),e),c={key:0},d=l((()=>(0,o.Lk)("button",null,"Save Key",-1))),u=l((()=>(0,o.Lk)("div",{class:"notice"},"Your key is stored in LocalStorage. There are no servers behind Kevin so nothing is transmitted.",-1))),h=["className"],p=l((()=>(0,o.Lk)("h2",null,"Specify a goal you‚Äôre looking to execute",-1))),m=l((()=>(0,o.Lk)("p",null,[(0,o.Lk)("em",null,"Note: Kevin is currently in Alpha, so please only give him small goals for now.")],-1))),y=["className"],v=["disabled"];function g(e,t,n,i,s,l){return(0,o.uX)(),(0,o.CE)("div",null,[s.openAiKey?(0,o.Q3)("",!0):((0,o.uX)(),(0,o.CE)("section",c,[(0,o.Lk)("form",{onSubmit:t[1]||(t[1]=(0,a.D$)(((...e)=>l.setOpenAiKey&&l.setOpenAiKey(...e)),["prevent"]))},[(0,o.bo)((0,o.Lk)("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=e=>s.currentOpenAiKey=e),placeholder:"Enter OpenAI API Key to Begin"},null,512),[[a.Jo,s.currentOpenAiKey]]),d],32),u])),(0,o.Lk)("article",{className:s.isReady?"":"disabled"},[p,m,(0,o.Lk)("form",{className:s.isFormEnabled?"":"disabled",onSubmit:t[3]||(t[3]=(0,a.D$)(((...e)=>l.planAndExecuteGoal&&l.planAndExecuteGoal(...e)),["prevent"]))},[(0,o.bo)((0,o.Lk)("input",{type:"text","onUpdate:modelValue":t[2]||(t[2]=e=>s.goal=e),placeholder:"Write a program that generates the fibonacci sequence"},null,512),[[a.Jo,s.goal]]),(0,o.Lk)("button",{disabled:!s.isFormEnabled||!s.isReady},(0,r.v_)(s.isFormEnabled?"Execute Goal":"Executing..."),9,v)],40,y)],8,h)])}n(4114);var f=n(595),w=(0,f.A)(),b={name:"ChatView",data(){return{currentOpenAiKey:"",openAiKey:"",goal:"",isFormEnabled:!0,isReady:!1,messages:[]}},watch:{openAiKey(e){e&&(localStorage.openAiKey=e),this.isReady=!0}},mounted(){localStorage.openAiKey&&(this.openAiKey=localStorage.openAiKey),w.on("executionComplete",this.enableForm)},methods:{disableForm(){this.isFormEnabled=!1,this.goal=""},enableForm(){this.isFormEnabled=!0},setOpenAiKey(){this.isReady=!0,this.openAiKey=this.currentOpenAiKey},chat(e){return this.messages.push({role:"user",content:e}),console.log(e),fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.openAiKey}`},body:JSON.stringify({model:"gpt-4-turbo-preview",messages:this.messages})}).then((e=>e.json())).then((e=>{if(e.error)throw new Error(e.error.message);console.log(e);const t=e.choices,n=t[t.length-1],a=n.message;return this.messages.push({role:"assistant",content:a.content}),console.log(this.messages),a.content})).catch((e=>{console.error(e)}))},async planAndExecuteGoal(){const e=this.goal.toLowerCase();this.disableForm();const t=`\nYou are inside a shell.\nProvide a series of terminal commands one after the other to ${e}\n\nUse only valid node js code and jest for testing.\nAlso write a test for the same.\n\nAll the text you give will directly be sent to a terminal, so don't include any unnecessary text and always give full response for any code. ONLY reply in valid terminal commands. Do NOT use echo or sed, only use "nano" to edit files.\n\nEVERYTHING YOU SAY WILL DIRECTLY BE SENT TO A TERMINAL, so only reply with a stream of keypresses that will get the result. Please only provide a stream of keypresses to be piped into an actual terminal without any explanation or text. You can provide control characters like ^X to close nano. Instead of "Enter", use \\n. Please only send valid commands and keypresses that can execute the goal in a terminal directly, do not write any explanation or comments or I might lose my job.`,n=await this.chat(t);let a=n.replace(/```(shell|sh|bash)/g,"").replace(/```/g,"");a=a.replace(/\^O/g,"").replace(/\^X/g,""),a=a.replace(/\\n/g,"\n");const o=a.split("\n").filter((e=>""!=e));console.log(o),w.emit("executeLinesWhenReady",o)}}},k=n(1241);const A=(0,k.A)(b,[["render",g],["__scopeId","data-v-50d5b0b9"]]);var L=A;const x={class:"box"},S=(0,o.Lk)("div",{id:"container"},[(0,o.Lk)("div",{id:"terminal"})],-1),E=[S];function P(e,t,n,a,i,s){return(0,o.uX)(),(0,o.CE)("div",x,E)}var T=n(2706),C=n(6242),K=n(6910),O=n(3170),R={name:"TerminalView",data(){return{ws:WebSocket,terminal:new T.Terminal,isPtyReady:!0,terminalPromptSanitized:"",directoryPathRegex:/([a-zA-Z-_ ]*:?[\\/][a-zA-Z-_ ]*)/g}},created(){var e="https:"===location.protocol?"wss://":"ws://",t=e+"localhost:6060/ws",n=new WebSocket(t);this.ws=n},methods:{closeConnection(){this.ws.close(),window.close()},loadConnection(){let e=this.ws;var t=new T.Terminal({screenKeys:!0,useStyle:!0,cursorBlink:!0,screenReaderMode:!0,cols:128});this.terminal=t,t.open(document.getElementById("terminal"));var n=new C.AttachAddon(this.ws,{bidirectional:!0}),a=new K.FitAddon;t.loadAddon(a),a.fit();var o=new O.WebLinksAddon;t.loadAddon(o),e.onclose=()=>{t.clear(),t.writeln("Requires active websocket connection to start! Set it up using the code on Kevin's Github.")},e.onopen=()=>{t.loadAddon(n),t._initialized=!0,t.focus(),t.onTitleChange((function(e){console.log(e)})),window.onresize=function(){a.fit()}};let i="",s=!1;e.onmessage=e=>{i=e.data,this.terminalPromptSanitized||setTimeout((()=>{this.terminalPromptSanitized=e.data.replace(this.directoryPathRegex,""),console.log("terminal prompt chosen",this.terminalPromptSanitized),this.isPtyReady=!0,console.log("PTY is ready")}),500),i.includes("GNU nano")&&(s=!0),console.log("latest sanitized",i.replace(this.directoryPathRegex,"")),this.isPtyReady=!!s||i.replace(this.directoryPathRegex,"")===this.terminalPromptSanitized}},sendSlowlyLikeNaturalTyping(e){return new Promise((t=>{let n=0;const a=setInterval((()=>{this.ws.send(e[n]),n++,n===e.length&&(clearInterval(a),t())}),50)}))},async executeLinesWhenReady(e){for(const t of e)if(!["shell","sh",""].includes(t)){while(!this.isPtyReady)console.log("waiting for pty to be ready"),await new Promise((e=>setTimeout(e,500)));await this.sendSlowlyLikeNaturalTyping(t+"\r"),await new Promise((e=>setTimeout(e,100)))}while(!this.isPtyReady)console.log("waiting for pty to be ready"),await new Promise((e=>setTimeout(e,500)));w.emit("executionComplete")}},mounted(){window.executeLinesWhenReady=this.executeLinesWhenReady,this.loadConnection(),this.$emit("toggleTerminal",{terminal:this.terminal}),w.on("executeLinesWhenReady",this.executeLinesWhenReady)},unmounted(){delete window.executeLinesWhenReady,this.closeConnection()}};const I=(0,k.A)(R,[["render",P]]);var F=I;const W=e=>((0,o.Qi)("data-v-789e117c"),e=e(),(0,o.jt)(),e),_=W((()=>(0,o.Lk)("p",{class:"intro"},[(0,o.Lk)("strong",null,"Kevin"),(0,o.eW)(),(0,o.Lk)("em",null,"(Alpha)"),(0,o.eW)(" interacts with your local filesystem using a websocket connection to pty "),(0,o.Lk)("em",null,[(0,o.eW)("(that "),(0,o.Lk)("a",{href:"https://github.com/namanyayg/kevin"},"you have to separately install"),(0,o.eW)(")")]),(0,o.eW)(" and writes JavaScript code and Jest tests to write any code that you want. Currently, it cannot read or modify existing codebases. ")],-1))),j=W((()=>(0,o.Lk)("hr",null,null,-1))),N=W((()=>(0,o.Lk)("span",{class:"tilde"},"~",-1))),z=W((()=>(0,o.Lk)("em",null,"(so I could delegate the boilerplate and focus on the creative parts of programming).",-1))),Y=(0,o.Fv)('<p data-v-789e117c>Seeing <a href="https://www.cognition-labs.com/" data-v-789e117c>Devin</a> made me realize that my teenage dream is close to becoming reality. For personal satisfaction, I embarked on making my own <a href="https://github.com/namanyayg/kevin" data-v-789e117c>open-source</a> interface.</p><p data-v-789e117c>The name comes from the legendary phreaker and my childhood hero <strong data-v-789e117c>Kevin Mitnick</strong> and is a play on Cognition Labs‚Äô product name.</p><p data-v-789e117c>I have clocked around <span class="tilde" data-v-789e117c>~</span>10 hours working on Kevin till now, so please keep the appropriate expectations. I‚Äôve made Kevin for myself as a hobby project and I‚Äôm usually actively working on <a href="https://nmn.gl/" data-v-789e117c>something else</a>.</p><p data-v-789e117c><strong data-v-789e117c>Tasks:</strong></p><ul data-v-789e117c><li class="checked" data-v-789e117c><input type="checkbox" checked data-v-789e117c><s data-v-789e117c>Make a terminal web interface connected to the local filesystem using websocket and node-pty.</s></li><li class="checked" data-v-789e117c><input type="checkbox" checked data-v-789e117c><s data-v-789e117c>Make GPT4 work with the terminal using nano, node, and jest.</s></li><li data-v-789e117c><input type="checkbox" data-v-789e117c>Add a ‚ÄúPlanner‚Äù agent</li><li data-v-789e117c><input type="checkbox" data-v-789e117c>Set up RAG so it can modify any existing codebase</li></ul>',5);function G(e,t,n,a,i,s){return(0,o.uX)(),(0,o.CE)("section",null,[_,j,(0,o.Lk)("p",null,[(0,o.eW)("Since I started freelancing around "),N,(0,o.eW)((0,r.v_)(i.yearsAgo)+" years ago, it has been a dream of mine to create a bot that could write code for me ",1),z]),Y])}var M={name:"AboutView",data(){return{yearsAgo:(new Date).getFullYear()-2014}}};const V=(0,k.A)(M,[["render",G],["__scopeId","data-v-789e117c"]]);var X=V;const B=(0,o.Fv)('<p class="footer-credits" data-v-370a28e8>A brainchild of</p><a rel="author" href="https://nmn.gl/" class="footer-title" data-v-370a28e8><svg xmlns="http://www.w3.org/2000/svg" width="30" viewBox="0 0 406 405.47" class="svg-logo" data-v-370a28e8><path d="M265 264.47v-122C265 74.91 210.27 20 142.71 20S20 74.77 20 142.32v243.15" data-v-370a28e8></path><path d="M141 142.47v121c0 67.56 55.71 122 123.26 122S386 331.66 386 264.1V20.47" data-v-370a28e8></path></svg><span class="logo__apostrophe" data-v-370a28e8>‚Äô</span>s Lab</a><p class="footer-credits" data-v-370a28e8>Handcrafted with love by <a href="https://nmn.gl/" data-v-370a28e8>Namanyay Goel ‚ö°</a></p>',3),D=[B];function J(e,t,n,a,i,s){return(0,o.uX)(),(0,o.CE)("footer",null,D)}var U={name:"ColophonView"};const $=(0,k.A)(U,[["render",J],["__scopeId","data-v-370a28e8"]]);var Q=$,q={name:"App",components:{Terminal:F,Chat:L,About:X,Colophon:Q}};const H=(0,k.A)(q,[["render",s]]);var Z=H;(0,a.Ef)(Z).mount("#app")}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var i=t[a]={exports:{}};return e[a].call(i.exports,i,i.exports,n),i.exports}n.m=e,function(){var e=[];n.O=function(t,a,o,i){if(!a){var s=1/0;for(d=0;d<e.length;d++){a=e[d][0],o=e[d][1],i=e[d][2];for(var r=!0,l=0;l<a.length;l++)(!1&i||s>=i)&&Object.keys(n.O).every((function(e){return n.O[e](a[l])}))?a.splice(l--,1):(r=!1,i<s&&(s=i));if(r){e.splice(d--,1);var c=o();void 0!==c&&(t=c)}}return t}i=i||0;for(var d=e.length;d>0&&e[d-1][2]>i;d--)e[d]=e[d-1];e[d]=[a,o,i]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,a){var o,i,s=a[0],r=a[1],l=a[2],c=0;if(s.some((function(t){return 0!==e[t]}))){for(o in r)n.o(r,o)&&(n.m[o]=r[o]);if(l)var d=l(n)}for(t&&t(a);c<s.length;c++)i=s[c],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(d)},a=self["webpackChunkkevin_client"]=self["webpackChunkkevin_client"]||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}();var a=n.O(void 0,[504],(function(){return n(440)}));a=n.O(a)})();
//# sourceMappingURL=app.0c58dcfd.js.map